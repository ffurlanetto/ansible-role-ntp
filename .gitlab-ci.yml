---
# Latest official molecule image from Red Hat's registry
image: quay.io/ansible/molecule:2.22

# Molecule needs to spawn docker container, so we use Docker in Docker(dind)
services:
  - docker:19.03.1-dind

# Global variables (applied to all jobs)
variables:
  # When using dind service, we need to instruct docker, to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. docker:19.03.1 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03.1/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  #
  # Note that if you're using the Kubernetes executor, the variable
  # should be set to tcp://localhost:2376 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2376
  #
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and job
  # container, thanks to volume mount from config.toml
  ANSIBLE_GATHER_TIMEOUT: "60"
  PY_COLORS: "1"
  DOCKER_TLS_CERTDIR: "/certs"

# For debugging, show the versions of each binary
before_script:
  - docker -v
  - python -V
  - ansible --version
  - molecule --version


molecule:
  stage: test
  script:
  - molecule test